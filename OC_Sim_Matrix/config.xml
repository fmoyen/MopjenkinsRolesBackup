<?xml version='1.1' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.14">
  <actions/>
  <description>builds and simulates many different configurations, automatic nightruns on master&#xd;
in case of problems: please contact jkayser@de.ibm.com or alexandre.castellane@fr.ibm.com&#xd;
=&gt; local ocse used (not repo)&#xd;
=&gt; 2018.2 test on AD9V3 only</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.4">
      <projectUrl>https://github.ibm.com/OC_Enablement/oc-snap/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <description>Choose the branch you want to test</description>
          <defaultValue>master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>HDL</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>HLS</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>AD9V3</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>XSIM</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>IRUN</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.ibm.com:OC-Enablement/oc-snap.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${BRANCH}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>snap</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
      <hudson.plugins.git.extensions.impl.PruneStaleBranch/>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.29.4">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>H 0-8/4 * * *
H 18-23/4 * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>true</concurrentBuild>
  <axes>
    <hudson.matrix.TextAxis>
      <name>ACT</name>
      <values>
        <string>hdl_example.SDRAM</string>
        <string>hdl_example.BRAM</string>
        <string>hdl_example.NORAM</string>
        <string>hls_helloworld</string>
        <string>hls_memcopy</string>
        <string>hls_memcopy_1024</string>
        <string>hls_latency_eval_1024</string>
        <string>test</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>CRD</name>
      <values>
        <string>AD9V3</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>SIM_VIV</name>
      <values>
        <string>irun_2018.2</string>
        <string>xsim_2018.2</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>(((ACT=~&quot;hdl&quot;&amp;&amp;HDL==&quot;true&quot; ) || (ACT=~&quot;hls&quot;&amp;&amp;HLS==&quot;true&quot; )) &amp;&amp; ((CRD==&quot;ADKU3&quot;&amp;&amp;ADKU3==&quot;true&quot;) || (CRD==&quot;AD9V3&quot;&amp;&amp;AD9V3==&quot;true&quot;)) &amp;&amp; ((SIM_VIV=~&quot;xsim&quot;&amp;&amp;XSIM==&quot;true&quot;)||(SIM_VIV=~&quot;irun&quot;&amp;&amp;IRUN==&quot;true&quot;)))  || ( ACT==&quot;test&quot;  &amp;&amp; CRD==&quot;AD9V3&quot; &amp;&amp; SIM_VIV==&quot;xsim_2018.1&quot;)</combinationFilter>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
set +x                           # reduce Jenkins output
echo &quot;****************************************************************************************&quot;
echo &quot;`date` BUILD START&quot;
echo &quot;****************************************************************************************&quot;
echo &quot;EXECUTING FIRST SHELL FROM OpenCAPI SIM JENKINS - V1.1 - 2019 march 06 - ...&quot;
echo &quot;****************************************************************************************&quot;
NAME=$(echo $GIT_BRANCH| cut -d&apos;/&apos; -f 2 |tr &apos;[:upper:]&apos; &apos;[:lower:]&apos;) # remove origin/ from branch and translate to lowercase
PREFIX=$(echo $NAME| cut -d&apos;_&apos; -f 1)    # chars up to first &apos;_&apos; identify need for test
ACTION_TYPE=$(echo $ACT| cut -d&apos;_&apos; -f 1)
SIM=$(echo $SIM_VIV| cut -d&apos;_&apos; -f 1)    # chars up to  first &apos;_&apos; identify Simulator
VIV=$(echo $SIM_VIV| cut -d&apos;_&apos; -f 2)    # chars behind first &apos;_&apos; identify Vivado version
echo &quot;Build with Card=$CRD Action=$ACT Action_type=$ACTION_TYPE branch_selected=$BRANCH git_branch=$NAME prefix=$PREFIX&quot;

BSKIP=0
if [ &quot;$ACTION_TYPE&quot; == &quot;hdl&quot;    ] &amp;&amp; [ &quot;$HDL&quot;    == &quot;false&quot; ]; then BSKIP=1;fi
if [ &quot;$ACTION_TYPE&quot; == &quot;hls&quot;    ] &amp;&amp; [ &quot;$HLS&quot;    == &quot;false&quot; ]; then BSKIP=1;fi
if [ &quot;$CRD&quot;         == &quot;AD9V3&quot;  ] &amp;&amp; [ &quot;$AD9V3&quot;  == &quot;false&quot; ]; then BSKIP=1;fi
if [ &quot;$ACT&quot;         == &quot;test&quot;   ]; then BSKIP=0;fi
echo &quot;examples(hdl,hls)=$HDL $HLS card_enabled(ku3,8k5,9v3,250S,S121,250SP)=$ADKU3 $AD8K5 $AD9V3 $N250S $S121B $N250SP BSKIP=$BSKIP&quot;

case &quot;$CRD:$ACT:$SIM&quot; in
  *:hls_blowfish:* )         C=&quot;blow&quot;;ASKIP=1;; # no maintenance for blowfish
# *:test:* )                 C=&quot;test&quot;;ASKIP=0;;
  * )                        C=&quot;def&quot; ;ASKIP=0;;
esac            
echo &quot;card=$CRD action=$ACT Sim=$SIM VIV=$VIV case=$C ASKIP=$ASKIP&quot;

case &quot;$ACT&quot; in
  test )
    gitnames=`git ls-remote git@github.ibm.com:OC-Enablement/oc-snap.git|grep &quot;refs/heads/&quot;|awk &apos;{print $2}&apos;`;RC=$?
    echo &quot;RC=$RC gitnames=$gitnames&quot;
    for dir in &quot;/afs/bb/proj/fpga/framework/CI_ws/OC_SNAP_SIM_matrix&quot;/*;do
      if [ -d &quot;$dir&quot; ];then
        branch=&quot;refs/heads/&quot;`basename $dir`
        if [[ &quot;$gitnames&quot; =~ &quot;$branch&quot; ]];then echo &quot;branch=$branch found in gitnames, keep dir=$dir&quot;
        else 
          echo &quot;branch=$branch not found in gitnames, delete dir=\&apos;$dir\&apos;&quot;
          rm -rf &quot;$dir&quot;     # put in quotes to work for directories with blanks
        fi
      else echo &quot;$dir is not a directory, continuing&quot;
      fi
    done
    date
    DSKIP=0;;
  *&quot;hls_intersect&quot;* ) 
    if [ -f snap/defconfig/$CRD.hls_intersect.defconfig ];then DSKIP=0
    else 
      echo &quot;$CRD.hls_intersect.defconfig does not exist&quot;
      ls snap/defconfig/
      DSKIP=1
    fi;;  
  * )          
    if [ -f snap/defconfig/$CRD.$ACT.defconfig ];then DSKIP=0
    else 
      echo &quot;$CRD.$ACT.defconfig does not exist&quot;
      ls snap/defconfig/
      DSKIP=1
    fi;;  
esac
echo &quot;defconfig SKIP=$DSKIP&quot;

AFSused=`fs lq /afs/bb/proj/fpga/framework/CI_ws/OC_SNAP_SIM_matrix/|grep -v Used|awk &apos;{print $4}&apos;|sed &apos;s/%//g&apos;|sed &apos;s/&lt;//g&apos;`
SSKIP=0;msg=&quot;AFS spaced currently used=${AFSused}%&quot;
if   (( AFSused &gt; 90 ));then msg=&quot;ERROR: $msg, stopping additional builds&quot;;SSKIP=1
elif (( AFSused &gt; 70 ));then msg=&quot;WARNING: $msg&quot;
fi;echo &quot;$msg&quot;

if (( ASKIP+DSKIP+BSKIP+SSKIP &gt; 0 ));then SKIP=1;else SKIP=0;fi
echo &quot;SKIP=$SKIP&quot; &gt;export_props.properties
echo &quot;properties passed to next shell:&quot;
cat export_props.properties
echo &quot;***********************************************************&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>300</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
    <touchStoneCombinationFilter>CRD==&quot;AD9V3&quot;  &amp;&amp; ACT==&quot;test&quot; &amp;&amp; SIM_VIV==&quot;xsim_2018.2&quot;</touchStoneCombinationFilter>
    <touchStoneResultCondition>
      <name>SUCCESS</name>
      <ordinal>0</ordinal>
      <color>BLUE</color>
      <completeBuild>true</completeBuild>
    </touchStoneResultCondition>
  </executionStrategy>
</matrix-project>