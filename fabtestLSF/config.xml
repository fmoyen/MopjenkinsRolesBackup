<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Fabtest for Boeblingen LSF cluster jobs submission</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.11"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.TextParameterDefinition>
          <name>LoginServersList</name>
          <description>Boeblingen LSF cluster Login Servers</description>
          <defaultValue>hdcl050.boeblingen.de.ibm.com
hdcl051.boeblingen.de.ibm.com
hdcl052.boeblingen.de.ibm.com
hdcl027.boeblingen.de.ibm.com
hdcl060.boeblingen.de.ibm.com
hdclp026.boeblingen.de.ibm.com</defaultValue>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash


echo &quot;Defined Credentials:&quot;
begin=`echo $AFSUser | cut -c1-4`; end=`echo $AFSUser | cut -c5-`
echo &quot;AFSUser= ${begin}...$end&quot;
begin=`echo $AFSPass | cut -c1-4`; end=`echo $AFSPass | cut -c5-`
echo &quot;AFSPass= ${begin}...$end&quot;

exit 0

MyJob=myjob
JobOutput=joboutput.txt

for i in $LoginServersList; do
  if ping -c1 $i &gt;/dev/null 2&gt;&amp;1; then 
    LoginServer=$i
    break
  fi
done

if [[ $LoginServer != &quot;&quot; ]]; then
  echo &quot;LSF Login Server = $LoginServer&quot;
else
  echo &quot;no LSF Login Server available ! Exiting&quot;
  exit 1
fi

# Build the job
cat &lt;&lt; EOF &gt; $MyJob
sleep 10
date &gt; $JobOutput
id &gt;&gt; $JobOutput
uname -a &gt;&gt; $JobOutput
EOF

# with myjob in local homedir
ping -c1 $LoginServer &gt; /dev/null &amp;&amp; sshpass -p $AFSPass ssh $AFSUser@$LoginServer &apos;bsub -q desktop -P hdwb -R &quot;select [type==X86_64 &amp;&amp; osver == rh7]&quot;&apos; &lt; $MyJob | tee lastrunjob.txt
JobID=`awk -F&quot;&gt;&quot; &apos;{print $1}&apos; lastrunjob.txt | awk -F&quot;&lt;&quot; &apos;{print $2}&apos;`

# Waiting for job to be marked as DONE
while ! sshpass -p $AFSPass ssh $AFSUser@$LoginServer bjobs $JobID 2&gt; /dev/null | grep $JobID | grep DONE &gt; /dev/null
do
  echo -e &quot;.\c&quot;
  sleep 1
done
echo

# Getting back Job file result
sshpass -p $AFSPass scp $AFSUser@$LoginServer:./$JobOutput . 
echo
cat $JobOutput
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.20">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <credentialsId>LSFUser</credentialsId>
          <usernameVariable>AFSUser</usernameVariable>
          <passwordVariable>AFSPass</passwordVariable>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>